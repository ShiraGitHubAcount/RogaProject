<h2>Borrowed Books</h2>

<button id="toggleSearchForm" class="btn btn-link">Advanced Filter</button>

<form id="searchForm" method="get" style="display:none; margin-top: 20px;">
    <div class="form-row">
        <div class="form-group col-md-3">
            <label for="BookName">Book Name</label>
            <input type="text" class="form-control" id="BookName" name="BookName" value="@Request.QueryString["BookName"]" />
        </div>
        <div class="form-group col-md-3">
            <label for="BorrowerId">Borrower</label>
            <select class="form-control" id="BorrowerId" name="BorrowerId">
                <option value="0">All</option>
                @foreach (var borrower in Model.Borrowers)
                {
                    <option value="@borrower.BorrowerID">@borrower.FirstName @borrower.LastName</option>
                }
            </select>
        </div>
        <div class="form-group col-md-3">
            <label for="BorrowedDate">Borrowed Date</label>
            <input type="date" class="form-control" id="BorrowedDate" name="BorrowedDate" value="@Request.QueryString["BorrowedDate"]" />
        </div>
        <div class="form-group col-md-3">
            <label for="IsReturned">Returned</label>
            <select class="form-control" id="IsReturned" name="IsReturned">
                <option value="">All</option>
                <option value="true">Yes</option>
                <option value="false">No</option>
            </select>
        </div>
    </div>
    <div style="margin-top: 10px; margin-left:20px;">
        <button type="submit" class="btn btn-primary">Search</button>
        <button type="reset" class="btn btn-secondary" id="resetButton">Reset</button>
    </div>
</form>

<table class="table table-bordered" id="borrowedBooksTable">
    <thead>
        <tr>
            <th>Book Name</th>
            <th>Borrower Name</th>
            <th>Borrowed Date</th>
            <th>Return Date</th>
            <th >Returned</th>
            <th style="width:120px">Return Book</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var borrowedBook in Model.BorrowedBooks)
        {
            var overdue = !borrowedBook.IsReturned && (DateTime.Now - borrowedBook.BorrowedDate).TotalDays > 14;
            <tr style="@((overdue ? "background-color: #f8d7da;" : ""))">
                <td>@borrowedBook.Copy.Book.Title</td>
                <td>@borrowedBook.Borrower.FirstName @borrowedBook.Borrower.LastName</td>
                <td>@borrowedBook.BorrowedDate.ToString("yyyy-MM-dd")</td>
                <td>@(borrowedBook.IsReturned ? borrowedBook.ReturnDate?.ToString("yyyy-MM-dd") : "N/A")</td>
                <td>
                    <input type="checkbox" disabled="disabled" @(borrowedBook.IsReturned ? "checked" : "") />
                </td>
                <td>
                    @if (!borrowedBook.IsReturned)
                    {
                        <button class="btn btn-success return-book-btn" data-id="@borrowedBook.BorrowedBookID">Return</button>
                    }
                    else
                    {
                        <span>Returned</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        $('#toggleSearchForm').on('click', function (e) {
            e.preventDefault();
            $('#searchForm').toggle();
        });

        $('#resetButton').on('click', function () {
            $('#searchForm').find('input, select').val('');
            $('#searchForm').submit();
        });

        $('#searchForm').on('submit', function (e) {
            e.preventDefault();

            var searchData = $(this).serialize();
            $.ajax({
                url: '@Url.Action("Index", "BorrowedBook")',
                type: 'GET',
                data: searchData,
                success: function (response) {
                    $('#borrowedBooksTable tbody').html($(response).find('#borrowedBooksTable tbody').html());
                },
                error: function () {
                    alert('Error fetching data.');
                }
            });
        });

        // AJAX לפונקציית החזרת ספר
        $('.return-book-btn').click(function () {
            var borrowedBookId = $(this).data('id');
            if (confirm("Are you sure you want to return this book?")) {
                $.ajax({
                    url: '@Url.Action("ReturnBook", "BorrowedBook")',
                    type: 'POST',
                    data: { borrowedBookId: borrowedBookId },
                    success: function (result) {
                        if (result.success) {
                            alert(result.message);
                            location.reload(); 
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function () {
                        alert("An error occurred while trying to return the book.");
                    }
                });
            }
        });
    });
</script>
