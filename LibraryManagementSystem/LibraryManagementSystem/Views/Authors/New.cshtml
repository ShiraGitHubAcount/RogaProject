@model LibraryManagementSystem.Models.Author

@{
    ViewBag.Title = "Create Author";
}

<h2>Create Author</h2>

@using (Html.BeginForm("New", "Authors", FormMethod.Post, new { @class = "form-horizontal", id = "createAuthorForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Full Name", id = "Name" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Email", id = "Email" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", placeholder = "Phone", id = "Phone" })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/additional-methods.min.js"></script>

    <script>
        $(document).ready(function () {
            // Custom validation method for international phone numbers
            $.validator.addMethod("phone", function (value, element) {
                return this.optional(element) || /^(\+?\d{1,4}[\s-]?)?(\(?\d{1,4}\)?[\s-]?)?\d{7,15}$/.test(value);
            }, "Please enter a valid phone number.");

            $("#createAuthorForm").validate({
                rules: {
                    Name: {
                        required: true,
                        minlength: 2
                    },
                    Email: {
                        required: true,
                        email: true
                    },
                    Phone: {
                        required: true,
                        phone: true // Using custom phone validation
                    }
                },
                messages: {
                    Name: {
                        required: "Please enter the full name",
                        minlength: "Name must be at least 2 characters long"
                    },
                    Email: {
                        required: "Please enter an email address",
                        email: "Please enter a valid email address"
                    },
                    Phone: {
                        required: "Please enter a phone number",
                        phone: "Please enter a valid phone number" // Using custom phone validation
                    }
                },
                errorElement: "div",
                errorPlacement: function (error, element) {
                    error.addClass("text-danger");
                    error.insertAfter(element);
                }
            });
        });
    </script>
}


